(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{277:function(e,t,s){"use strict";s.r(t);var a=s(9),r=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"description"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#description"}},[e._v("#")]),e._v(" Description")]),e._v(" "),t("p",[e._v("In this assignment you will create an iOS App using Swift/SwiftUI that will first check to see if the device it is running on is connected to the internet. If it is not connected it will display an error message. If it is connected it will display a random image download from the internet.")]),e._v(" "),t("p",[e._v("The user can then use a Left to Right Drag gesture to download another random web image.")]),e._v(" "),t("p",[e._v("There will be a minimum of 20 image URL's stored in a list. These URL's are the source addresses for the images used in this App.")]),e._v(" "),t("p",[e._v("You must find, test and then add these URL's to your App.")]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),t("p",[e._v("All URL's must use the secure "),t("strong",[e._v("https://")]),e._v(" protocol. For example: "),t("code",[e._v("https://source.unsplash.com/random")])]),e._v(" "),t("p",[e._v('Also add the following "dead" URL to you list for testing. This URL must be active (not commented out) in your URL list for your submitted assignment so that error handling can be verified:')]),e._v(" "),t("p",[t("code",[e._v("https://placezombie.com/720x405")])])]),e._v(" "),t("p",[e._v("You will create a class that contains a method that will deliver a random URL from your list which will then be used as the source for the image that is to be displayed.")]),e._v(" "),t("p",[e._v("This method will provide all twenty URL's (plus the dead URL) in the list separately, randomly and without duplicating a URL.")]),e._v(" "),t("p",[e._v("Once all URL's have been used, the list will shuffle then repeat this process.")]),e._v(" "),t("p",[e._v("This app will use the Kingfisher Library to display images from the web.")]),e._v(" "),t("h2",{attrs:{id:"requirements"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),t("h3",{attrs:{id:"dependencies"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dependencies"}},[e._v("#")]),e._v(" Dependencies")]),e._v(" "),t("p",[e._v("Using the Swift Package Manager in Xcode add the latest version of the following libraries from GitHub:")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/onevcat/Kingfisher",target:"_blank",rel:"noopener noreferrer"}},[e._v("Kingfisher library"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/huynguyencong/ToastSwiftUI",target:"_blank",rel:"noopener noreferrer"}},[e._v("the ToastSwiftUI package"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"user-interface"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#user-interface"}},[e._v("#")]),e._v(" User Interface")]),e._v(" "),t("p",[e._v("The following controls will be added to the ContentView.swift file (the user interface):")]),e._v(" "),t("ul",[t("li",[e._v("KFImage")]),e._v(" "),t("li",[e._v("ProgressView")]),e._v(" "),t("li",[e._v("ZStack")]),e._v(" "),t("li",[e._v("VStack")]),e._v(" "),t("li",[e._v("Color")])]),e._v(" "),t("h3",{attrs:{id:"separate-files"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#separate-files"}},[e._v("#")]),e._v(" Separate Files")]),e._v(" "),t("p",[e._v("Use separate files for the ImageUrls class and InternetConnection class.")]),e._v(" "),t("h3",{attrs:{id:"properties"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),t("p",[e._v("You will add several properties to the ContentView.swift file including:")]),e._v(" "),t("ul",[t("li",[e._v("Several "),t("code",[e._v("@State")]),e._v(" property wrappers")]),e._v(" "),t("li",[e._v("a private ImageUrls object named imageUrls that will be used to retrieve image URLs "),t("em",[e._v("(all URLs must be https)")])]),e._v(" "),t("li",[e._v("a private InternetConnection object named internetConnected that will be used to check for internet access")])]),e._v(" "),t("h3",{attrs:{id:"enum"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#enum"}},[e._v("#")]),e._v(" Enum")]),e._v(" "),t("p",[e._v("An enum of type String called toastMessages will be added and will contain values and raw values for the following cases:")]),e._v(" "),t("ul",[t("li",[e._v("clearedCache")]),e._v(" "),t("li",[e._v("imageProcessingOn")]),e._v(" "),t("li",[e._v("imageProcessingOff")]),e._v(" "),t("li",[e._v("loadFailed")])]),e._v(" "),t("p",[e._v("The raw values from the enum described above will be used as message text displaying the required user information messages (toast style).")]),e._v(" "),t("h3",{attrs:{id:"gestures"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gestures"}},[e._v("#")]),e._v(" Gestures")]),e._v(" "),t("p",[e._v("Add the following required gestures to the ZStack:")]),e._v(" "),t("ul",[t("li",[e._v("DragGesture - used to load images using a Left to Right drag gesture")]),e._v(" "),t("li",[e._v("LongPressGesture - used to empty the image cache")]),e._v(" "),t("li",[e._v("onTapGesture - set as a double tap - used to apply image processing")])]),e._v(" "),t("h2",{attrs:{id:"additional-required-features"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#additional-required-features"}},[e._v("#")]),e._v(" Additional Required Features")]),e._v(" "),t("ul",[t("li",[e._v("Alert message")]),e._v(" "),t("li",[e._v("Image cache deleted on startup")]),e._v(" "),t("li",[e._v("Some sort of UI messaging similar to Toast messages used in Android\nListener for image downloads. You may build your own solution or use the ToastSwiftUI library.")]),e._v(" "),t("li",[e._v("Use SwiftUI image modifiers to fill the safe viewing area of the device.")]),e._v(" "),t("li",[e._v("At least one image processor")]),e._v(" "),t("li",[e._v("Background color set to Black for entire viewing area including outside the safe viewing area")]),e._v(" "),t("li",[e._v("ProgressView color change and optional size change")])]),e._v(" "),t("h3",{attrs:{id:"if-using-the-toastswiftui-library"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#if-using-the-toastswiftui-library"}},[e._v("#")]),e._v(" If using the ToastSwiftUI library")]),e._v(" "),t("p",[e._v("Add the following package to your project using the Swift package manager:")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/huynguyencong/ToastSwiftUI",target:"_blank",rel:"noopener noreferrer"}},[e._v("ToastSwiftUI"),t("OutboundLink")],1)]),e._v(" "),t("h4",{attrs:{id:"create-the-required-enum"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-the-required-enum"}},[e._v("#")]),e._v(" Create the required enum:")]),e._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[e._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("enum")]),e._v(" toastMessages"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("String")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("case")]),e._v(" clearedCache "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Image cache cleared"')])]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("case")]),e._v(" imageProcessingOn "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Image processing on"')])]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("case")]),e._v(" imageProcessingOff "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Image processing off"')])]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("case")]),e._v(" loadFailed "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Load Failed: "')])]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("h4",{attrs:{id:"add-a-state-variable"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#add-a-state-variable"}},[e._v("#")]),e._v(" Add a State variable:")]),e._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token attribute atrule"}},[e._v("@State")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("private")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" toastMessage"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("String")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" toastMessages"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("clearedCache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("rawValue "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('// "Image cache cleared"')]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h4",{attrs:{id:"students-complete-the-rest-of-the-setup-and-then-add-toast-message-for"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#students-complete-the-rest-of-the-setup-and-then-add-toast-message-for"}},[e._v("#")]),e._v(" Students complete the rest of the setup and then add Toast message for:")]),e._v(" "),t("ul",[t("li",[e._v("KFImage .onFailure")]),e._v(" "),t("li",[e._v("Cleared Cache using .onLongPressGesture")]),e._v(" "),t("li",[e._v("Image processing on")]),e._v(" "),t("li",[e._v("Image processing off")])]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),t("p",[e._v("The enum toastMessages rawValue properties must be used for all Toast message Text.")])]),e._v(" "),t("h3",{attrs:{id:"code-comments"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#code-comments"}},[e._v("#")]),e._v(" Code comments")]),e._v(" "),t("p",[e._v("Add your full name and the date at the top of all Swift source code files.")]),e._v(" "),t("p",[e._v("Add separate //MARK: labels in the ContentView,  InternetConnection and ImageURLs Swift source code files for Properties and methods.")]),e._v(" "),t("h2",{attrs:{id:"submission"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#submission"}},[e._v("#")]),e._v(" Submission")]),e._v(" "),t("p",[e._v("Submit your project as a zip file.")]),e._v(" "),t("p",[e._v("NOTE: Make sure you add your first and last name to your submitted zip file:")]),e._v(" "),t("p",[e._v("example:  Pat_Student_iOSAssignment2.zip")])])}),[],!1,null,null,null);t.default=r.exports}}]);